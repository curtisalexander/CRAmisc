% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xml.R
\name{xml_extract}
\alias{xml_extract}
\title{XML Extract}
\usage{
xml_extract(x, xpath, extract_type, extract_value = NULL,
  ret_var_name = NULL)
}
\arguments{
\item{x}{XML document: a literal XML document, a URL, or a string.}

\item{xpath}{A string containing a xpath (1.0) expression.}

\item{extract_type}{The string "text" or "attr" selecting the type of
extraction.}

\item{extract_value}{The attribute value to be extracted.  This only needs to
be set if \code{extract_type = "attr"}.}

\item{ret_var_name}{The variable name of the extracted value.
\code{xml_extract} may be used as part of an assignment statement.  If this
is the case, then the parameter \code{ret_var_name} should remain
\code{NULL}.  But if \code{xml_extract} is to be used as part of a functional
pipeline then it may be necessary to name the returned value.}
}
\value{
The extracted text or attribute value from an XML tag.
}
\description{
Extract XML text or an XML attribute via XPath.
}
\details{
May be used as a UDF that is part of a \code{dplyr} pipeline.  The most
simple use is to include \code{xml_extract} as part of a \code{dplyr::mutate}
function.  For details see \code{vignette("chunked-invoke-rows-xml")}.

A more complex use would be to use as a UDF to parse an arbitrary number of
text and attribute values from an XML document.  This can be accomplished
utilizing a dataframe holding parameter values, \code{purrr::pmap}, and
\code{purrr::invoke_rows}.

Because \link[xml2]{xml_find_first} is the function utilized in
\code{xml_extract}, errors are consumed.  This is helpful when iterating over
a set of XML documents where the schemas are inconsistent.

Suggested resources for XPath are
\itemize{
  \item \url{https://developer.mozilla.org/en-US/docs/Web/XPath/Functions}
  \item \url{http://www.w3schools.com/xsl/xpath_syntax.asp}
}
}
\seealso{
See \code{vignette("chunked-invoke-rows")} for usage.
}

